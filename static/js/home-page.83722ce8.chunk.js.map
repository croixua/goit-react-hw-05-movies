{"version":3,"file":"static/js/home-page.83722ce8.chunk.js","mappings":"+PAEA,MCEe,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACRC,MACC,IAEH,IAAMA,EAAS,mCAAG,oGACMC,EAAAA,KADN,OACVC,EADU,OAGhBJ,EAAUI,GAHM,2CAAH,qDAMf,OAAO,SAACC,EAAA,EAAD,CAAMN,OAAQA,M,oLCjBjBO,EAAU,mCACVC,EAAW,+BAEXC,EAAgB,gBAChBC,EAAc,UAApB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAA5C,SACoBC,MAAMD,GAD1B,cACQE,EADR,gBAEqBA,EAAIC,OAFzB,cAEQC,EAFR,yBAISA,GAJT,mEAOA,IAAMC,EAAa,SAAC,GAAiB,IAAfZ,EAAc,EAAdA,QACpB,OAAKA,GAA8B,IAAnBA,EAAQa,OAGjBb,EAFEc,QAAQC,OAAO,IAAIC,MAAM,yBAK9BC,EAAa,SAAAC,GACjB,OAAKA,IAAuB,IAAhBA,EAAIC,QAITD,EAHEJ,QAAQC,OAAO,IAAIC,MAAJ,qBAMnB,SAASI,IAGd,OAAOd,EAFE,UAAMH,GAAN,OA3BY,sBA2BZ,oBAA2CD,IAEjBmB,KAAKT,GAGnC,SAASU,IAAgC,IAAnBC,EAAkB,uDAAJ,GACnChB,EAAG,UAAMJ,GAAN,OAAiBC,EAAjB,oBAA0CF,EAA1C,kBAA2DqB,GAEpE,OAAKA,EAAYC,OAEVlB,EAAuBC,GAAKc,KAAKT,GAFRa,MAAM,mBAKjC,SAASC,EAAgBC,GAG9B,OAAOrB,EAFE,UAAMH,GAAN,OAAiBE,GAAjB,OAA+BsB,EAA/B,oBAA6CzB,IAEnBmB,KAAKJ,GAGnC,SAASW,EAAoBD,GAGlC,OAAOrB,EAFE,UAAMH,GAAN,OAAiBE,GAAjB,OAA+BsB,EAA/B,4BAAqDzB,IAE3BmB,KAAKJ,GAEnC,SAASY,EAAuBF,GAGrC,OAAOrB,EAFE,UAAMH,GAAN,OAAiBE,GAAjB,OAA+BsB,EAA/B,4BAAqDzB,IAE3BmB,KAAKT,K,mFCtD1C,MCAe,YAA2B,IAAXjB,EAAU,EAAVA,OAC7B,GAA6BmC,EAAAA,EAAAA,MAArBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAElB,OACE,wBACGrC,EAAOsC,KAAI,gBAAGC,EAAH,EAAGA,eAAgBP,EAAnB,EAAmBA,GAAnB,OACV,yBACE,SAAC,KAAD,CAAMQ,GAAE,kBAAaR,GAAMS,MAAO,CAAEC,KAAM,CAAEN,SAAAA,EAAUC,OAAAA,IAAtD,SACGE,KAFIP","sources":["components/HomePage/index.js","components/HomePage/HomePage.jsx","services/API.js","views/List/index.js","views/List/List.jsx"],"sourcesContent":["import HomePage from './HomePage.jsx';\n\nexport default HomePage;\n","import { useState, useEffect } from 'react';\nimport * as API from '../../services/API';\nimport List from 'views/List';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  const getMovies = async () => {\n    const results = await API.fetchTrendingMovies();\n\n    setMovies(results);\n  };\n\n  return <List movies={movies} />;\n}\n","const API_KEY = '31a0dc93409a2f9cdc2f4d925fcba2bc';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TRENDING_MOVIE = '/trending/movie/day';\nconst SEARCH_MOVIES = '/search/movie';\nconst MOVIE_BY_ID = '/movie/';\n\nasync function fetchWithErrorHandling(url = '') {\n  const res = await fetch(url);\n  const data = await res.json();\n\n  return data;\n}\n\nconst checkDates = ({ results }) => {\n  if (!results || results.length === 0)\n    return Promise.reject(new Error('No movies requested'));\n\n  return results;\n};\n\nconst checkMovie = obj => {\n  if (!obj || obj.success === false) {\n    return Promise.reject(new Error(`Not found movie`));\n  }\n\n  return obj;\n};\n\nexport function fetchTrendingMovies() {\n  const url = `${BASE_URL}${TRENDING_MOVIE}?api_key=${API_KEY}`;\n\n  return fetchWithErrorHandling(url).then(checkDates);\n}\n\nexport function searchMovies(searchQuery = '') {\n  const url = `${BASE_URL}${SEARCH_MOVIES}?api_key=${API_KEY}&query=${searchQuery}`;\n\n  if (!searchQuery.trim()) return alert('enter the movie');\n\n  return fetchWithErrorHandling(url).then(checkDates);\n}\n\nexport function searchMovieByID(id) {\n  const url = `${BASE_URL}${MOVIE_BY_ID}${id}?api_key=${API_KEY}`;\n\n  return fetchWithErrorHandling(url).then(checkMovie);\n}\n\nexport function searchMovieCastByID(id) {\n  const url = `${BASE_URL}${MOVIE_BY_ID}${id}/credits?api_key=${API_KEY}`;\n\n  return fetchWithErrorHandling(url).then(checkMovie);\n}\nexport function searchMovieReviewsByID(id) {\n  const url = `${BASE_URL}${MOVIE_BY_ID}${id}/reviews?api_key=${API_KEY}`;\n\n  return fetchWithErrorHandling(url).then(checkDates);\n}\n","import List from './List';\n\nexport default List;\n","import { Link, useLocation } from 'react-router-dom';\n\nexport default function List({ movies }) {\n  const { pathname, search } = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ original_title, id }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: { pathname, search } }}>\n            {original_title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n"],"names":["useState","movies","setMovies","useEffect","getMovies","API","results","List","API_KEY","BASE_URL","SEARCH_MOVIES","MOVIE_BY_ID","fetchWithErrorHandling","url","fetch","res","json","data","checkDates","length","Promise","reject","Error","checkMovie","obj","success","fetchTrendingMovies","then","searchMovies","searchQuery","trim","alert","searchMovieByID","id","searchMovieCastByID","searchMovieReviewsByID","useLocation","pathname","search","map","original_title","to","state","from"],"sourceRoot":""}