{"version":3,"file":"static/js/movies-reviews.3da635e9.chunk.js","mappings":"wOAEA,MCAe,YAAwC,IAAZA,EAAW,EAAXA,QACnCC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,IAAIH,IAEV,iCACE,mBACA,wBACGD,EAAQK,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC/B,OACE,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,Y,SCTrB,MCIe,WACb,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoBE,EAAAA,EAAAA,YAApB,eAAOH,EAAP,KAAWI,EAAX,KACA,GAA8BD,EAAAA,EAAAA,YAA9B,eAAOX,EAAP,KAAgBa,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACRJ,EAAMH,KACL,CAACA,KAEJO,EAAAA,EAAAA,YAAU,WACHR,GAELS,EAAAA,GAA2BT,GACxBU,KAAKL,GACLM,OAAM,gBAAGC,EAAH,EAAGA,QAAH,OAAiBL,EAASK,QAClC,CAACZ,KAGF,gCACGR,IAAW,SAAC,EAAD,CAAkBA,QAASA,IACtCc,IAAS,SAACO,EAAA,QAAD,CAAUD,QAASN,S,oLC3B7BQ,EAAU,mCACVC,EAAW,+BAEXC,EAAgB,gBAChBC,EAAc,UAApB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAA5C,SACoBC,MAAMD,GAD1B,cACQE,EADR,gBAEqBA,EAAIC,OAFzB,cAEQC,EAFR,yBAISA,GAJT,mEAOA,IAAMC,EAAa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAKA,GAA8B,IAAnBA,EAAQC,OAGjBD,EAFEE,QAAQC,OAAO,IAAIC,MAAM,yBAK9BC,EAAa,SAAAC,GACjB,OAAKA,IAAuB,IAAhBA,EAAIC,SAAqBD,EAAIE,KAChCN,QAAQC,OAAO,IAAIC,MAAJ,oBAGjBE,GAGF,SAASG,IAGd,OAAOhB,EAFE,UAAMH,GAAN,OA3BY,sBA2BZ,oBAA2CD,IAEjBJ,KAAKc,GAGnC,SAASW,IAAgC,IAAnBC,EAAkB,uDAAJ,GACnCjB,EAAG,UAAMJ,GAAN,OAAiBC,EAAjB,oBAA0CF,EAA1C,kBAA2DsB,GAEpE,OAAKA,EAAYC,OAEVnB,EAAuBC,GAAKT,KAAKc,GAFRc,MAAM,mBAKjC,SAASC,EAAgBvC,GAG9B,OAAOkB,EAFE,UAAMH,GAAN,OAAiBE,GAAjB,OAA+BjB,EAA/B,oBAA6Cc,IAEnBJ,KAAKoB,GAGnC,SAASU,EAAoBxC,GAGlC,OAAOkB,EAFE,UAAMH,GAAN,OAAiBE,GAAjB,OAA+BjB,EAA/B,4BAAqDc,IAE3BJ,KAAKoB,GAEnC,SAASW,EAAuBzC,GAGrC,OAAOkB,EAFE,UAAMH,GAAN,OAAiBE,GAAjB,OAA+BjB,EAA/B,4BAAqDc,IAE3BJ,KAAKc,K,iECxD3B,SAASX,EAAT,GAAgC,IAAZD,EAAW,EAAXA,QACjC,OAAO,wBAAKA,M,wCCCd,UAAeC,EAAf","sources":["views/MovieReviewsView/index.js","views/MovieReviewsView/MovieReviewsView.jsx","components/MoviesPage/MovieDetailsPage/MovieReviews/index.js","components/MoviesPage/MovieDetailsPage/MovieReviews/MovieReviews.jsx","services/API.js","views/NotFound/NotFound.jsx","views/NotFound/index.js"],"sourcesContent":["import MovieReviewsView from './MovieReviewsView';\n\nexport default MovieReviewsView;\n","import { useLocation } from 'react-router-dom';\n\nexport default function MovieReviewsView({ reviews }) {\n  const location = useLocation();\n  console.log(location);\n  return (\n    <>\n      <hr />\n      <ul>\n        {reviews.map(({ author, content, id }) => {\n          return (\n            <li key={id}>\n              <h2>{author}</h2>\n              <p>{content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n","import MovieReviews from './MovieReviews';\n\nexport default MovieReviews;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport NotFound from 'views/NotFound';\nimport MovieReviewsView from 'views/MovieReviewsView';\nimport * as API from 'services/API';\n\nexport default function MovieReviews() {\n  const { movieId } = useParams();\n  const [id, setID] = useState();\n  const [reviews, setReviews] = useState();\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setID(movieId);\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!id) return;\n\n    API.searchMovieReviewsByID(id)\n      .then(setReviews)\n      .catch(({ message }) => setError(message));\n  }, [id]);\n\n  return (\n    <>\n      {reviews && <MovieReviewsView reviews={reviews} />}\n      {error && <NotFound message={error} />}\n    </>\n  );\n}\n","const API_KEY = '31a0dc93409a2f9cdc2f4d925fcba2bc';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TRENDING_MOVIE = '/trending/movie/day';\nconst SEARCH_MOVIES = '/search/movie';\nconst MOVIE_BY_ID = '/movie/';\n\nasync function fetchWithErrorHandling(url = '') {\n  const res = await fetch(url);\n  const data = await res.json();\n\n  return data;\n}\n\nconst checkDates = ({ results }) => {\n  if (!results || results.length === 0)\n    return Promise.reject(new Error('No movies requested'));\n\n  return results;\n};\n\nconst checkMovie = obj => {\n  if (!obj || obj.success === false || obj.cast) {\n    return Promise.reject(new Error(`Not found movie`));\n  }\n\n  return obj;\n};\n\nexport function fetchTrendingMovies() {\n  const url = `${BASE_URL}${TRENDING_MOVIE}?api_key=${API_KEY}`;\n\n  return fetchWithErrorHandling(url).then(checkDates);\n}\n\nexport function searchMovies(searchQuery = '') {\n  const url = `${BASE_URL}${SEARCH_MOVIES}?api_key=${API_KEY}&query=${searchQuery}`;\n\n  if (!searchQuery.trim()) return alert('enter the movie');\n\n  return fetchWithErrorHandling(url).then(checkDates);\n}\n\nexport function searchMovieByID(id) {\n  const url = `${BASE_URL}${MOVIE_BY_ID}${id}?api_key=${API_KEY}`;\n\n  return fetchWithErrorHandling(url).then(checkMovie);\n}\n\nexport function searchMovieCastByID(id) {\n  const url = `${BASE_URL}${MOVIE_BY_ID}${id}/credits?api_key=${API_KEY}`;\n\n  return fetchWithErrorHandling(url).then(checkMovie);\n}\nexport function searchMovieReviewsByID(id) {\n  const url = `${BASE_URL}${MOVIE_BY_ID}${id}/reviews?api_key=${API_KEY}`;\n\n  return fetchWithErrorHandling(url).then(checkDates);\n}\n","export default function NotFound({ message }) {\n  return <h1>{message}</h1>;\n}\n","import NotFound from './NotFound';\n\nexport default NotFound;\n"],"names":["reviews","location","useLocation","console","log","map","author","content","id","movieId","useParams","useState","setID","setReviews","error","setError","useEffect","API","then","catch","message","NotFound","API_KEY","BASE_URL","SEARCH_MOVIES","MOVIE_BY_ID","fetchWithErrorHandling","url","fetch","res","json","data","checkDates","results","length","Promise","reject","Error","checkMovie","obj","success","cast","fetchTrendingMovies","searchMovies","searchQuery","trim","alert","searchMovieByID","searchMovieCastByID","searchMovieReviewsByID"],"sourceRoot":""}